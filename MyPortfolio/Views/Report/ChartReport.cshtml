@*@{
        var location = new { x = 200, y = 20 };
    }
    <ejs-chart id="container" title="Olympic Medals">
        <e-chart-legendsettings visible="true" position="Custom" location="location"></e-chart-legendsettings>
        <e-chart-primaryxaxis valueType="Category"></e-chart-primaryxaxis>
        <e-series-collection>
            <e-series dataSource="ViewBag.dataSource" name="Gold" xName="country" width="2" opacity="1" yName="gold" type="@Syncfusion.EJ2.Charts.ChartSeriesType.Column"></e-series>
            <e-series dataSource="ViewBag.dataSource" name="Silver" xName="country" width="2" opacity="1" yName="silver" type="@Syncfusion.EJ2.Charts.ChartSeriesType.Column"></e-series>
            <e-series dataSource="ViewBag.dataSource" name="bronze" xName="country" width="2" opacity="1" yName="bronze" type="@Syncfusion.EJ2.Charts.ChartSeriesType.Column"></e-series>
        </e-series-collection>
    </ejs-chart>*@

@*@{
        var myChart = new Chart(width: 600, height: 400)
            .AddTitle("Chart Title")
            .AddSeries(
                name: "Employee",
                xValue: @ViewBag.ValueArray,
                yValues: ViewBag.NameArray)
            .Write();
    }*@
@*@(Html.EJS().AccumulationChart("container").Series(series =>
                        {
                            series.InnerRadius("70%").DataSource(ViewBag.dataSource).XName("xValue").YName("yValue")
                                  .Type(Syncfusion.EJ2.Charts.AccumulationType.Pie).Add();
                        }).Render()
    );*@

@{
    ViewData["Title"] = "UseDataArray";
}

<h2>Use Data Array</h2>
<hr />
<div class="container">
    <div class="row">
        <div class="col-md-6">
            <h4 style="margin-left:200px">Simple Pie Chart</h4>
            <div id="chart1"></div>
        </div>
        <div class="col-md-6">
            <h4 style="margin-left:200px">Line Chart</h4>
            <div id="chart2"></div>
        </div>
    </div>
</div>

@section scripts{
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

    <script>
        google.charts.load('current', { 'packages': ['corechart'] });
        google.charts.setOnLoadCallback(drawChart);

        function drawChart() {
            // Pie Chart with Data Array:
            var arr = [];
            var name[] = @ViewBag.nameArray;
            var value[] = @ViewBag.valueArray;
            @*for (i = 0; i <@ViewBag.valueArray.length; i++) {
                arr[i] = [@ViewBag.name[i], {@ViewBag.value[i]}]
            }*@
            var arr = [
                ['Tax Type', 'Tax Percentage'],
                ['Income Tax', { v: 35, f: '35%' }],
                ['Borrowing', { v: 15, f: '15%' }],
                ['Corp. Tax', { v: 12, f: '12%' }],
                ['Misc', { v: 8, f: '8%' }]
            ];
            var data = google.visualization.arrayToDataTable(arr, false);
            var option = {
                title: 'Tax Structure in US',
                width: 600,
                height: 500
            };
            var chart = new google.visualization.PieChart(document.getElementById('chart1'));
            chart.draw(data, option);

            // Line Chart:
            arr = [];
            arr.push(['x', 'sin(x)', 'cos(x)', 'sin(x)^2']);
            for (var i = 0; i < 70; i++) {
                var x = 0.1 * i;
                arr.push([x, Math.sin(x), Math.cos(x), Math.sin(x) * Math.sin(x)]);
            }
            data = google.visualization.arrayToDataTable(arr, false);
            chart = new google.visualization.LineChart(document.getElementById('chart2'));
            chart.draw(data, option);
        }
    </script>
}